
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%   Harris角点提取算法                                          %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
clear;
%filename = 'Lena.jpg';
filename='l_3.jpg';
X = imread(filename);     % 读取图像
% imshow(X);
Info = imfinfo(filename); %获取图像相关信息
if (Info.BitDepth > 8)
    f = rgb2gray(X);
end
%《基于特征点的图像配准与拼接技术研究》
%计算图像亮度f(x,y)在点(x,y)处的梯度-----------------------------------------------
% fx = [5 0 -5;8 0 -8;5 0 -5];          % 高斯函数一阶微分，x方向(用于改进的Harris角点提取算法)
ori_im = double(f) / 255;                   %unit8转化为64为双精度double64
fx = [-2 -1 0 1 2];                     % x方向梯度算子(用于Harris角点提取算法)
Ix = filter2(fx, ori_im);                % x方向滤波
% fy = [5 8 5;0 0 0;-5 -8 -5];          % 高斯函数一阶微分，y方向(用于改进的Harris角点提取算法)
fy = [-2; -1; 0; 1; 2];                     % y方向梯度算子(用于Harris角点提取算法)
Iy = filter2(fy, ori_im);                % y方向滤波
%构造自相关矩阵---------------------------------------------------------------
Ix2 = Ix .^ 2;
Iy2 = Iy .^ 2;
Ixy = Ix .* Iy;
clear Ix;
clear Iy;
h= fspecial('gaussian', [7 7], 2);        % 产生7*7的高斯窗函数，sigma=2
Ix2 = filter2(h,Ix2);
Iy2 = filter2(h,Iy2);
Ixy = filter2(h,Ixy);
%提取特征点---------------------------------------------------------------
height = size(ori_im, 1);
width = size(ori_im, 2);
result = zeros(height, width);           % 纪录角点位置，角点处值为1
R = zeros(height, width);
Rmax = 0;                              % 图像中最大的R值
k = 0.06; %k为常系数，经验取值范围为0.04~0.06
for i = 1 : height
    for j = 1 : width
        M = [Ix2(i, j) Ixy(i, j); Ixy(i, j) Iy2(i, j)];             % auto correlation matrix
        R(i,j) = det(M) - k * (trace(M)) ^ 2;                     % 计算R
        if R(i,j) > Rmax
            Rmax = R(i, j);
        end;
    end;
end;
%T = 0.01 * Rmax;%固定阈值，当R(i, j) > T时，则被判定为候选角点
T = 0.1 * Rmax;%固定阈值，当R(i, j) > T时，则被判定为候选角点

%在计算完各点的值后，进行局部非极大值抑制-------------------------------------
cnt = 0;
for i = 2 : height-1
    for j = 2 : width-1
        % 进行非极大抑制，窗口大小3*3
        if (R(i, j) > T && R(i, j) > R(i-1, j-1) && R(i, j) > R(i-1, j) && R(i, j) > R(i-1, j+1) && R(i, j) > R(i, j-1) && ...
                R(i, j) > R(i, j+1) && R(i, j) > R(i+1, j-1) && R(i, j) > R(i+1, j) && R(i, j) > R(i+1, j+1))
            result(i, j) = 1;
            cnt = cnt+1;
        end;
    end;
end;
i = 1;
    for j = 1 : height
        for k = 1 : width
            if result(j, k) == 1;
                corners1(i, 1) = j;
                corners1(i, 2) = k;
                i = i + 1;
            end; 
        end;
    end;
[posc, posr] = find(result == 1);
figure,imshow(ori_im);
hold on;
plot(posr, posc, 'r+');
hold on;

%% 选取目标线上的点
[yy,x1] = ginput;   
wid = 5;
x1 = int16(x1);
yy = int16(yy);
for i = 1:1:length(x1)
    if (result(x1(i),yy(i)) ~=1)  %如果选中了非角点
        [lx1,ly1]=find (result(x1(i)-wid:x1(i)+wid,yy(i)-wid:yy(i)+wid)==1);   %找到wid近邻的角位置
        x1(i) = x1(i)-wid-1+lx1(1);
        yy(i) = yy(i)-wid-1+ly1(1);
    end
end
plot (yy,x1,'o')
hold on


[y2,x2] = ginput;
wid = 5;
x2 = int16(x2);
y2 = int16(y2);
for i = 1:1:length(x2)
    if (result(x2(i),y2(i)) ~=1)  %如果选中了非角点
        [lx2,ly2]=find (result(x2(i)-wid:x2(i)+wid,y2(i)-wid:y2(i)+wid)==1);   %找到wid近邻的角位置
        x2(i) = x2(i)-wid-1+lx2(1);
        y2(i) = y2(i)-wid-1+ly2(1);
    end
end
plot (y2,x2,'o')
hold on

[y3,x3] = ginput;
wid = 5;
x3 = int16(x3);
y3 = int16(y3);
for i = 1:1:length(x3)
    if (result(x3(i),y3(i)) ~=1)  %如果选中了非角点
        [lx3,ly3]=find (result(x3(i)-wid:x3(i)+wid,y3(i)-wid:y3(i)+wid)==1);   %找到wid近邻的角位置
        x3(i) = x3(i)-wid-1+lx3(1);
        y3(i) = y3(i)-wid-1+ly3(1);
    end
end
plot (y3,x3,'o')
hold on


